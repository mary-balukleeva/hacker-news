{"version":3,"sources":["components/Navbar.tsx","components/NewsList.tsx","api/fetchNews.tsx","components/CommentsList.tsx","App.tsx","index.tsx"],"names":["Navbar","className","href","NewsList","newsList","newsInfo","toggleComments","map","item","index","key","score","url","target","title","onClick","kids","API","fetchNewInfo","id","Promise","resolve","reject","fetch","then","res","json","catch","err","fetchComments","fetchArray","arr","promises","all","CommentsList","commentsList","e","stopPropagation","comment","text","App","useState","news","setNews","visibleNews","setVisibleNews","setNewsInfo","setCommentsList","showComments","setShowComments","useEffect","data","splice","forEach","newsId","prev","commentsId","document","body","style","overflow","commentId","time","countPage","countShowingNews","length","newVisibleNews","console","log","showMoreNews","ReactDOM","render","StrictMode","getElementById"],"mappings":"yLAEaA,EAAmB,kBAC9B,6BACE,yBAAKC,UAAU,mCACb,uBAAGC,KAAK,IAAID,UAAU,cAAtB,WCGOE,EAAiC,SAAC,GAA2C,EAAzCC,SAA0C,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eACnE,OACE,4BACGD,EAASE,KAAI,SAACC,EAAMC,GAAP,OACZ,wBAAIR,UAAU,OAAOS,IAAKD,GAA1B,IACID,EAAKG,MADT,IAEE,uBAAGT,KAAMM,EAAKI,IAAKC,OAAO,SAASZ,UAAU,QAC1CO,EAAKM,OAER,4BAAQb,UAAU,4BAA4Bc,QAAS,kBAAMT,EAAeE,EAAKQ,QAAjF,uBCjBJC,EAAM,wCAUL,SAASC,EAAaC,GAC3B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,MAAM,GAAD,OAAIN,EAAJ,iBAAgBE,EAAhB,UACFK,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,WAC1BC,OAAM,SAAAC,GAAG,OAAIN,EAAO,UAIpB,SAASO,EAAcV,GAC5B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,MAAM,GAAD,OAAIN,EAAJ,iBAAgBE,EAAhB,UACFK,MAAK,SAAAC,GAAG,OAAIJ,EAAQI,EAAIC,WACxBC,OAAM,SAAAC,GAAG,OAAIN,EAAO,UAIpB,SAASQ,IAA8C,IAAnCC,EAAkC,uDAAlB,GACnCC,EAAWD,EAAIxB,KAAI,SAAAY,GAAE,OAAID,EAAaC,MAC5C,OAAOC,QAAQa,IAAID,GCtBd,IAAME,EAAqC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnD,OACE,yBAAKpB,QAAS,SAAAqB,GAAC,OAAIA,EAAEC,mBAAmBpC,UAAU,mBAChD,yBAAKA,UAAU,kBAGdkC,EAAa5B,KAAI,SAAC+B,EAAS7B,GAAV,OAChB,uBAAGR,UAAU,gBAAgBS,IAAKD,GAC/B6B,EAAQC,WC6EJC,EArFsB,WAAO,IAAD,EACjBC,mBAAgB,IADC,mBAClCC,EADkC,KAC5BC,EAD4B,OAEHF,mBAAgB,IAFb,mBAElCG,EAFkC,KAErBC,EAFqB,OAGTJ,mBAAgB,IAHP,mBAGxBK,GAHwB,aAIDL,mBAAgB,IAJf,mBAIlCN,EAJkC,KAIpBY,EAJoB,OAMDN,oBAAkB,GANjB,mBAMlCO,EANkC,KAMpBC,EANoB,KAQzCC,qBAAU,WFXH,IAAI9B,SAAQ,SAACC,EAASC,GAC3BC,MAAM,GAAD,OAAIN,EAAJ,qBACFO,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,WAC1BC,OAAM,SAAAC,GAAG,OAAIN,EAAO,UEUpBE,MAAK,SAAA2B,GACJR,EAAQQ,IACRA,EAAOA,EAAKC,OAAO,EAAG,KAEjBC,SAAQ,SAACC,GACZpC,EAAaoC,GACV9B,MAAK,SAAA2B,GACJN,GAAe,SAAAU,GAAI,4BACbA,GADa,CACPJ,UAGbxB,OAAM,kBAAMmB,EAAY,aAG9BnB,OAAM,kBAAMgB,EAAQ,SACtB,IAEH,IAAMrC,EAAiB,WAA+C,IAA9CkD,EAA6C,uDAAf,KAChDR,GACFS,SAASC,KAAKC,MAAMC,SAAW,OAC/Bb,EAAgB,IAEhBE,GAAgB,KAEhBO,EAAaA,GAAc,IAEhBH,SAAQ,SAAAQ,GACjBhC,EAAcgC,GACXrC,MAAK,SAAA2B,GACJJ,GAAgB,SAAAQ,GAAI,4BACdA,GADc,CACR,CACRhB,KAAMY,EAAKZ,KACXuB,KAAMX,EAAKW,WAGfb,GAAgB,GAChBQ,SAASC,KAAKC,MAAMC,SAAW,YAEhCjC,OAAM,kBAAMoB,EAAgB,WAoBrC,OACE,oCACE,kBAAC,EAAD,MACA,yBAAK9C,UAAU,aACb,kBAAC,EAAD,CAAUG,SAAUsC,EAAMrC,SAAUuC,EAAatC,eAAgBA,IAEjE,4BAAQS,QAAS,kBArBF,WAA6B,IAA5BgD,EAA2B,uDAAP,GACpCC,EAAmBpB,EAAYqB,OAASF,EAC5CC,EAAmBA,EAAmBtB,EAAKuB,OACvCvB,EAAKuB,OACLD,EAEJ,IAAME,EAAiB,YAAIxB,GAAMU,OAAO,EAAGY,GAE3ClC,EAAWoC,GACR1C,MAAK,SAAA2B,GACJN,EAAeM,MAEhBxB,OAAM,SAAAC,GAAG,OAAIuC,QAAQC,IAAI,QAASxC,MASVyC,IAAgBpE,UAAU,qCAAjD,aAEC+C,EACC,yBAAK/C,UAAU,QAAQc,QAAS,kBAAMT,MACpC,kBAAC,EAAD,CAAc6B,aAAcA,KACrB,Q,MChFnBmC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFf,SAASgB,eAAe,U","file":"static/js/main.6ebc6ff5.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Navbar: React.FC = () => (\n  <nav>\n    <div className=\"nav-wrapper purple darken-1 px1\">\n      <a href=\"/\" className=\"brand-logo\">\n        News\n      </a>\n    </div>\n  </nav>\n)\n","import React from \"react\";\n\ntype INewsProps = {\n  newsList: any[];\n  newsInfo: any[];\n  toggleComments: (commentsId: number[]) => void;\n}\n\nexport const NewsList: React.FC<INewsProps> = ({ newsList, newsInfo, toggleComments }) => {\n  return (\n    <ul>\n      {newsInfo.map((item, index) => (\n        <li className=\"news\" key={index}>\n          ({item.score})\n          <a href={item.url} target=\"_blank\" className=\"link\">\n            {item.title}\n          </a>\n          <button className=\"btn blue open-comments ml\" onClick={() => toggleComments(item.kids)}>\n            Open comments\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\n","const API = 'https://hacker-news.firebaseio.com/v0';\n\nexport function fetchNewsList(): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetch(`${API}/topstories.json`)\n      .then((res) => resolve(res.json()))\n      .catch(err => reject([]))\n  })\n}\n\nexport function fetchNewInfo(id: number): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetch(`${API}/item/${id}.json`)\n      .then((res) => resolve(res.json()))\n      .catch(err => reject([]))\n  })\n}\n\nexport function fetchComments(id: number): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetch(`${API}/item/${id}.json`)\n      .then(res => resolve(res.json()))\n      .catch(err => reject([]));\n  })\n}\n\nexport function fetchArray(arr: number[] = []): Promise<any> {\n  const promises = arr.map(id => fetchNewInfo(id));\n  return Promise.all(promises);\n}\n","import React from \"react\";\n\ntype INewsProps = {\n  commentsList: any[];\n}\n\nexport const CommentsList: React.FC<INewsProps> = ({ commentsList }) => {\n  return (\n    <div onClick={e => e.stopPropagation()} className=\"comment-wrapper\">\n      <div className=\"comment-inner\">\n\n      </div>\n      {commentsList.map((comment, index) =>\n        <p className=\"comment-inner\" key={index}>\n          {comment.text}\n        </p>\n      )}\n    </div>\n  );\n}\n\n","import React, { useEffect, useState } from 'react';\nimport { Navbar } from './components/Navbar';\nimport { NewsList } from \"./components/NewsList\";\nimport { fetchComments, fetchNewInfo, fetchNewsList, fetchArray } from \"./api/fetchNews\";\nimport { CommentsList } from \"./components/CommentsList\";\n\nconst App: React.FunctionComponent = () => {\n  const [news, setNews] = useState<any[]>([])\n  const [visibleNews, setVisibleNews] = useState<any[]>([])\n  const [newsInfo, setNewsInfo] = useState<any[]>([]);\n  const [commentsList, setCommentsList] = useState<any[]>([])\n\n  const [showComments, setShowComments] = useState<boolean>(false)\n\n  useEffect(() => {\n    fetchNewsList()\n      .then(data => {\n        setNews(data)\n        data = data.splice(0, 20)\n\n        data.forEach((newsId: number) => {\n          fetchNewInfo(newsId)\n            .then(data => {\n              setVisibleNews(prev => (\n                [...prev, data]\n              ))\n            })\n            .catch(() => setNewsInfo([]))\n        })\n      })\n      .catch(() => setNews([]))\n  }, [])\n\n  const toggleComments = (commentsId: number[] | null = null): void => {\n    if (showComments) {\n      document.body.style.overflow = \"auto\"\n      setCommentsList([]);\n\n      setShowComments(false);\n    } else {\n      commentsId = commentsId || [];\n\n      commentsId.forEach(commentId => {\n        fetchComments(commentId)\n          .then(data => {\n            setCommentsList(prev => (\n              [...prev, {\n                text: data.text,\n                time: data.time,\n              }]\n            ))\n            setShowComments(true);\n            document.body.style.overflow = \"hidden\"\n          })\n          .catch(() => setCommentsList([]))\n      })\n    }\n  }\n\n  const showMoreNews = (countPage: number = 20) => {\n    let countShowingNews = visibleNews.length + countPage;\n    countShowingNews = countShowingNews > news.length\n      ? news.length\n      : countShowingNews;\n\n    const newVisibleNews = [...news].splice(0, countShowingNews);\n\n    fetchArray(newVisibleNews)\n      .then(data => {\n        setVisibleNews(data)\n      })\n      .catch(err => console.log('Err: ', err));\n  }\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container\">\n        <NewsList newsList={news} newsInfo={visibleNews} toggleComments={toggleComments} />\n\n        <button onClick={() => showMoreNews()} className=\"btn btn-primary block-center my-1\">SHOW MORE</button>\n\n        {showComments ?\n          <div className=\"modal\" onClick={() => toggleComments()}>\n            <CommentsList commentsList={commentsList} />\n          </div> : null}\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}